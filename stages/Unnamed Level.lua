-- Generated by ProvEdit version 0.1 --
local STAGE_INFO = {
    name = "Unnamed Level",
    subname = "",
    width = 1920,
    height = 1056,
    music = ":nothing:"
}

local STAGE_LAYERS = {
    {
        depth = 12,
        sprite = "Tile16Water",
        origin = "Vanilla",
        grid = true,
        tiles = {
            [97] = {
                [44] = {1,1}, [48] = {9,0}, [46] = {1,1}, [43] = {2,0}, [47] = {1,1}, [45] = {1,1}, [49] = {2,2}, 
            },
            [49] = {
                [48] = {3,1}, [52] = {1,1}, [51] = {1,1}, [54] = {2,2}, [50] = {1,1}, [53] = {9,0}, [49] = {8,1}, 
            },
            [92] = {
                [44] = {1,1}, [42] = {2,0}, [46] = {1,3}, [43] = {1,1}, [45] = {1,1}, 
            },
            [105] = {
                [48] = {1,1}, [46] = {2,0}, [47] = {1,1}, [50] = {2,3}, [49] = {1,1}, 
            },
            [51] = {
                [52] = {1,1}, [51] = {1,1}, [54] = {1,3}, [50] = {1,1}, [53] = {1,1}, [49] = {3,0}, 
            },
            [62] = {
                [52] = {1,1}, [55] = {1,3}, [51] = {1,0}, [54] = {1,1}, [53] = {1,1}, 
            },
            [100] = {
                [44] = {3,1}, [48] = {1,1}, [46] = {1,1}, [47] = {1,1}, [45] = {8,1}, [49] = {2,3}, 
            },
            [113] = {
                [44] = {0,0}, [48] = {1,1}, [46] = {1,1}, [47] = {1,1}, [45] = {9,1}, [50] = {2,3}, [49] = {1,1}, 
            },
            [45] = {
                [48] = {1,1}, [52] = {9,0}, [51] = {1,1}, [47] = {3,0}, [50] = {1,1}, [53] = {0,3}, [49] = {1,1}, 
            },
            [108] = {
                [48] = {1,1}, [46] = {1,0}, [47] = {1,1}, [50] = {3,3}, [49] = {1,1}, 
            },
            [121] = {
                [44] = {1,0}, [48] = {1,3}, [46] = {1,1}, [47] = {1,1}, [45] = {1,1}, 
            },
            [47] = {
                [48] = {3,0}, [52] = {1,1}, [51] = {1,1}, [50] = {1,1}, [53] = {1,3}, [49] = {1,1}, 
            },
            [63] = {
                [52] = {1,1}, [55] = {2,3}, [51] = {9,1}, [54] = {1,1}, [50] = {2,1}, [53] = {1,1}, 
            },
            [116] = {
                [44] = {1,0}, [48] = {1,1}, [46] = {1,1}, [47] = {1,1}, [45] = {1,1}, [49] = {1,3}, 
            },
            [37] = {
                [48] = {9,1}, [52] = {8,0}, [51] = {1,1}, [47] = {0,0}, [50] = {1,1}, [53] = {3,2}, [49] = {1,1}, 
            },
            [41] = {
                [48] = {1,1}, [52] = {3,2}, [51] = {8,0}, [47] = {3,0}, [50] = {1,1}, [49] = {1,1}, 
            },
            [61] = {
                [52] = {1,1}, [55] = {2,3}, [51] = {1,0}, [54] = {1,1}, [53] = {1,1}, 
            },
            [29] = {
                [52] = {1,1}, [51] = {1,1}, [50] = {1,1}, [53] = {2,3}, [49] = {2,0}, 
            },
            [33] = {
                [48] = {2,1}, [52] = {1,1}, [51] = {1,1}, [50] = {1,1}, [53] = {3,3}, [49] = {9,1}, 
            },
            [23] = {
                [48] = {3,0}, [52] = {1,1}, [51] = {1,1}, [50] = {1,1}, [53] = {2,3}, [49] = {1,1}, 
            },
            [71] = {
                [48] = {1,1}, [46] = {3,0}, [52] = {8,0}, [51] = {1,1}, [47] = {1,1}, [50] = {1,1}, [53] = {4,3}, [49] = {1,1}, 
            },
            [28] = {
                [52] = {1,1}, [51] = {1,1}, [50] = {1,1}, [53] = {1,3}, [49] = {2,0}, 
            },
            [15] = {
                [44] = {8,1}, [42] = {4,0}, [48] = {1,1}, [46] = {1,1}, [51] = {3,3}, [43] = {4,1}, [47] = {1,1}, [45] = {1,1}, [50] = {1,1}, [49] = {1,1}, 
            },
            [58] = {
                [52] = {1,1}, [55] = {2,3}, [51] = {1,0}, [54] = {1,1}, [53] = {1,1}, 
            },
            [69] = {
                [48] = {9,1}, [52] = {1,1}, [51] = {1,1}, [47] = {0,0}, [54] = {3,2}, [50] = {1,1}, [53] = {8,0}, [49] = {1,1}, 
            },
            [20] = {
                [48] = {1,1}, [52] = {3,3}, [51] = {1,1}, [47] = {1,0}, [50] = {1,1}, [49] = {1,1}, 
            },
            [7] = {
                [42] = {3,3}, [38] = {2,0}, [40] = {1,1}, [39] = {1,1}, [41] = {1,1}, 
            },
            [75] = {
                [44] = {2,0}, [48] = {1,1}, [46] = {1,1}, [47] = {1,1}, [45] = {1,1}, [50] = {3,2}, [49] = {8,0}, 
            },
            [12] = {
                [44] = {1,1}, [42] = {1,1}, [48] = {9,0}, [46] = {1,1}, [38] = {4,0}, [40] = {1,1}, [39] = {8,1}, [43] = {1,1}, [41] = {1,1}, [47] = {1,1}, [45] = {1,1}, [50] = {0,3}, [49] = {0,1}, 
            },
            [-1] = {
                [42] = {1,3}, [38] = {3,0}, [40] = {1,1}, [39] = {1,1}, [41] = {1,1}, 
            },
            [57] = {
                [52] = {1,1}, [55] = {1,3}, [51] = {8,1}, [54] = {1,1}, [50] = {3,1}, [53] = {1,1}, 
            },
            [73] = {
                [44] = {2,1}, [48] = {1,1}, [46] = {1,1}, [51] = {1,3}, [47] = {1,1}, [45] = {9,1}, [50] = {1,1}, [49] = {1,1}, 
            },
            [4] = {
                [42] = {1,3}, [38] = {1,0}, [40] = {1,1}, [39] = {1,1}, [41] = {1,1}, 
            },
            [83] = {
                [44] = {1,1}, [42] = {3,0}, [46] = {8,0}, [43] = {1,1}, [47] = {3,2}, [45] = {1,1}, 
            },
            [59] = {
                [52] = {1,1}, [55] = {1,3}, [51] = {1,0}, [54] = {1,1}, [53] = {1,1}, 
            },
            [79] = {
                [44] = {1,1}, [48] = {1,3}, [46] = {1,1}, [43] = {2,0}, [47] = {1,1}, [45] = {1,1}, 
            },
            [91] = {
                [44] = {1,1}, [42] = {2,0}, [46] = {1,3}, [43] = {1,1}, [45] = {1,1}, 
            },
            [87] = {
                [44] = {1,1}, [42] = {3,0}, [46] = {1,3}, [43] = {1,1}, [45] = {1,1}, 
            },
            [99] = {
                [44] = {2,0}, [48] = {1,1}, [46] = {1,1}, [47] = {1,1}, [45] = {1,1}, [49] = {1,3}, 
            },
            [94] = {
                [44] = {1,1}, [42] = {2,0}, [46] = {1,1}, [43] = {1,1}, [47] = {1,3}, [45] = {1,1}, 
            },
            [107] = {
                [48] = {1,1}, [46] = {1,0}, [47] = {1,1}, [50] = {3,3}, [49] = {1,1}, 
            },
            [102] = {
                [48] = {1,1}, [46] = {1,1}, [47] = {1,1}, [45] = {1,0}, [50] = {3,3}, [49] = {1,1}, 
            },
            [115] = {
                [44] = {2,0}, [48] = {1,1}, [46] = {1,1}, [47] = {1,1}, [45] = {1,1}, [49] = {1,3}, 
            },
            [110] = {
                [48] = {1,1}, [46] = {9,1}, [47] = {1,1}, [45] = {0,0}, [50] = {1,3}, [49] = {1,1}, 
            },
            [123] = {
                [44] = {2,0}, [48] = {3,3}, [46] = {1,1}, [47] = {1,1}, [45] = {1,1}, 
            },
            [118] = {
                [44] = {2,0}, [48] = {3,3}, [46] = {1,1}, [47] = {1,1}, [45] = {1,1}, 
            },
            [124] = {
                [44] = {1,0}, [48] = {1,3}, [46] = {1,1}, [47] = {1,1}, [45] = {1,1}, 
            },
            [38] = {
                [48] = {1,1}, [52] = {1,3}, [51] = {1,1}, [47] = {2,0}, [50] = {1,1}, [49] = {1,1}, 
            },
            [65] = {
                [52] = {1,1}, [55] = {2,3}, [51] = {1,1}, [54] = {1,1}, [50] = {2,0}, [53] = {1,1}, 
            },
            [42] = {
                [48] = {1,1}, [51] = {1,3}, [47] = {1,0}, [50] = {1,1}, [49] = {1,1}, 
            },
            [64] = {
                [52] = {1,1}, [55] = {2,3}, [51] = {1,1}, [54] = {1,1}, [50] = {1,0}, [53] = {1,1}, 
            },
            [30] = {
                [52] = {1,1}, [51] = {1,1}, [50] = {1,1}, [53] = {1,3}, [49] = {3,0}, 
            },
            [67] = {
                [48] = {2,1}, [52] = {1,1}, [51] = {1,1}, [54] = {2,3}, [50] = {1,1}, [53] = {1,1}, [49] = {9,1}, 
            },
            [34] = {
                [48] = {1,0}, [52] = {1,1}, [51] = {1,1}, [50] = {1,1}, [53] = {3,3}, [49] = {1,1}, 
            },
            [66] = {
                [52] = {1,1}, [55] = {4,3}, [51] = {1,1}, [54] = {8,0}, [50] = {9,1}, [53] = {1,1}, [49] = {2,1}, 
            },
            [21] = {
                [48] = {8,1}, [52] = {9,0}, [51] = {1,1}, [47] = {4,0}, [50] = {1,1}, [53] = {0,3}, [49] = {1,1}, 
            },
            [26] = {
                [52] = {1,1}, [51] = {1,1}, [50] = {1,1}, [53] = {2,3}, [49] = {2,0}, 
            },
            [13] = {
                [44] = {1,1}, [42] = {1,1}, [48] = {1,1}, [46] = {1,1}, [40] = {8,1}, [39] = {4,0}, [43] = {1,1}, [41] = {1,1}, [47] = {1,1}, [45] = {1,1}, [50] = {1,3}, [49] = {1,1}, 
            },
            [18] = {
                [48] = {1,1}, [52] = {2,3}, [51] = {1,1}, [47] = {2,0}, [50] = {1,1}, [49] = {1,1}, 
            },
            [5] = {
                [42] = {3,3}, [38] = {2,0}, [40] = {1,1}, [39] = {1,1}, [41] = {1,1}, 
            },
            [10] = {
                [44] = {9,0}, [42] = {1,1}, [38] = {2,0}, [40] = {1,1}, [39] = {1,1}, [43] = {1,1}, [41] = {1,1}, [45] = {2,2}, 
            },
            [-3] = {
                [42] = {2,3}, [38] = {3,0}, [40] = {1,1}, [39] = {1,1}, [41] = {1,1}, 
            },
            [2] = {
                [42] = {2,3}, [38] = {1,0}, [40] = {1,1}, [39] = {1,1}, [41] = {1,1}, 
            },
            [-4] = {
                [42] = {3,3}, [38] = {1,0}, [40] = {1,1}, [39] = {1,1}, [41] = {1,1}, 
            },
            [55] = {
                [52] = {1,1}, [55] = {3,3}, [51] = {1,1}, [54] = {1,1}, [50] = {1,0}, [53] = {1,1}, 
            },
            [82] = {
                [44] = {1,1}, [42] = {2,0}, [46] = {1,1}, [43] = {1,1}, [47] = {3,3}, [45] = {1,1}, 
            },
            [56] = {
                [52] = {1,1}, [55] = {3,3}, [51] = {1,1}, [54] = {1,1}, [50] = {2,0}, [53] = {1,1}, 
            },
            [78] = {
                [44] = {1,1}, [48] = {2,3}, [46] = {1,1}, [43] = {1,0}, [47] = {1,1}, [45] = {1,1}, 
            },
            [53] = {
                [52] = {1,1}, [51] = {1,1}, [54] = {2,3}, [50] = {8,1}, [53] = {1,1}, [49] = {3,1}, 
            },
            [90] = {
                [44] = {1,1}, [42] = {1,0}, [46] = {1,3}, [43] = {1,1}, [45] = {1,1}, 
            },
            [54] = {
                [52] = {1,1}, [55] = {2,2}, [51] = {1,1}, [54] = {9,0}, [50] = {3,0}, [53] = {1,1}, 
            },
            [86] = {
                [44] = {1,1}, [42] = {1,0}, [46] = {3,3}, [43] = {1,1}, [45] = {1,1}, 
            },
            [50] = {
                [52] = {1,1}, [51] = {1,1}, [54] = {1,3}, [50] = {1,1}, [53] = {1,1}, [49] = {1,0}, 
            },
            [96] = {
                [44] = {1,1}, [42] = {3,1}, [48] = {1,3}, [46] = {1,1}, [43] = {8,1}, [47] = {1,1}, [45] = {1,1}, 
            },
            [93] = {
                [44] = {1,1}, [42] = {2,0}, [46] = {9,0}, [43] = {1,1}, [47] = {2,2}, [45] = {1,1}, 
            },
            [52] = {
                [52] = {1,1}, [51] = {1,1}, [54] = {3,3}, [50] = {1,1}, [53] = {1,1}, [49] = {1,0}, 
            },
            [104] = {
                [48] = {1,1}, [46] = {8,1}, [47] = {1,1}, [45] = {3,1}, [50] = {1,3}, [49] = {1,1}, 
            },
            [101] = {
                [48] = {1,1}, [46] = {1,1}, [47] = {1,1}, [45] = {1,0}, [50] = {2,2}, [49] = {9,0}, 
            },
            [46] = {
                [48] = {8,1}, [52] = {1,1}, [51] = {1,1}, [47] = {3,1}, [50] = {1,1}, [53] = {3,3}, [49] = {1,1}, 
            },
            [112] = {
                [48] = {1,1}, [46] = {1,1}, [47] = {1,1}, [45] = {1,0}, [50] = {2,3}, [49] = {1,1}, 
            },
            [109] = {
                [48] = {1,1}, [46] = {1,0}, [47] = {1,1}, [50] = {2,3}, [49] = {1,1}, 
            },
            [48] = {
                [48] = {2,0}, [52] = {1,1}, [51] = {1,1}, [50] = {1,1}, [53] = {1,3}, [49] = {1,1}, 
            },
            [120] = {
                [44] = {3,0}, [48] = {2,3}, [46] = {1,1}, [47] = {1,1}, [45] = {1,1}, 
            },
            [117] = {
                [44] = {2,0}, [48] = {8,0}, [46] = {1,1}, [47] = {1,1}, [45] = {1,1}, [49] = {4,3}, 
            },
            [39] = {
                [48] = {1,1}, [52] = {1,3}, [51] = {1,1}, [47] = {3,0}, [50] = {1,1}, [49] = {1,1}, 
            },
            [125] = {
                [44] = {4,0}, [48] = {4,3}, [46] = {4,1}, [47] = {4,2}, [45] = {4,2}, 
            },
            [43] = {
                [48] = {1,1}, [52] = {2,2}, [51] = {9,0}, [47] = {2,0}, [50] = {1,1}, [49] = {1,1}, 
            },
            [60] = {
                [52] = {1,1}, [55] = {2,3}, [51] = {2,0}, [54] = {1,1}, [53] = {1,1}, 
            },
            [31] = {
                [52] = {1,1}, [51] = {1,1}, [50] = {1,1}, [53] = {2,3}, [49] = {3,0}, 
            },
            [35] = {
                [48] = {2,0}, [52] = {1,1}, [51] = {1,1}, [50] = {1,1}, [53] = {1,3}, [49] = {1,1}, 
            },
            [70] = {
                [48] = {1,1}, [46] = {0,0}, [52] = {1,1}, [51] = {1,1}, [47] = {9,1}, [50] = {1,1}, [53] = {1,3}, [49] = {1,1}, 
            },
            [24] = {
                [48] = {2,0}, [52] = {1,1}, [51] = {1,1}, [50] = {1,1}, [53] = {2,3}, [49] = {1,1}, 
            },
            [27] = {
                [52] = {1,1}, [51] = {1,1}, [50] = {1,1}, [53] = {3,3}, [49] = {2,0}, 
            },
            [68] = {
                [48] = {3,0}, [52] = {1,1}, [51] = {1,1}, [54] = {3,3}, [50] = {1,1}, [53] = {1,1}, [49] = {1,1}, 
            },
            [16] = {
                [44] = {4,0}, [48] = {1,1}, [46] = {8,1}, [51] = {3,3}, [47] = {1,1}, [45] = {4,2}, [50] = {1,1}, [49] = {1,1}, 
            },
            [19] = {
                [48] = {1,1}, [52] = {3,3}, [51] = {1,1}, [47] = {1,0}, [50] = {1,1}, [49] = {1,1}, 
            },
            [74] = {
                [44] = {3,0}, [48] = {1,1}, [46] = {1,1}, [51] = {3,2}, [47] = {1,1}, [45] = {1,1}, [50] = {8,0}, [49] = {1,1}, 
            },
            [8] = {
                [42] = {9,0}, [38] = {2,0}, [40] = {1,1}, [39] = {1,1}, [43] = {2,2}, [41] = {1,1}, 
            },
            [11] = {
                [44] = {1,1}, [42] = {1,1}, [48] = {0,3}, [46] = {0,2}, [38] = {3,0}, [40] = {1,1}, [39] = {1,1}, [43] = {1,1}, [41] = {1,1}, [47] = {0,2}, [45] = {9,0}, 
            },
            [72] = {
                [48] = {1,1}, [46] = {9,1}, [52] = {4,3}, [51] = {8,0}, [47] = {1,1}, [45] = {2,1}, [50] = {1,1}, [49] = {1,1}, 
            },
            [0] = {
                [42] = {1,3}, [38] = {3,0}, [40] = {1,1}, [39] = {1,1}, [41] = {1,1}, 
            },
            [3] = {
                [42] = {3,3}, [38] = {1,0}, [40] = {1,1}, [39] = {1,1}, [41] = {1,1}, 
            },
            [81] = {
                [44] = {1,1}, [42] = {2,0}, [46] = {1,1}, [43] = {1,1}, [47] = {2,3}, [45] = {1,1}, 
            },
            [-5] = {
                [42] = {2,3}, [38] = {3,0}, [40] = {1,1}, [39] = {1,1}, [41] = {1,1}, 
            },
            [77] = {
                [44] = {9,1}, [48] = {8,0}, [46] = {1,1}, [43] = {0,0}, [47] = {1,1}, [45] = {1,1}, [49] = {4,3}, 
            },
            [89] = {
                [44] = {1,1}, [42] = {2,0}, [46] = {2,3}, [43] = {1,1}, [45] = {1,1}, 
            },
            [85] = {
                [44] = {1,1}, [42] = {3,0}, [46] = {1,3}, [43] = {1,1}, [45] = {1,1}, 
            },
            [98] = {
                [44] = {8,1}, [48] = {1,1}, [46] = {1,1}, [43] = {4,0}, [47] = {1,1}, [45] = {1,1}, [49] = {3,3}, 
            },
            [95] = {
                [44] = {1,1}, [42] = {3,0}, [48] = {2,2}, [46] = {1,1}, [43] = {1,1}, [47] = {9,0}, [45] = {1,1}, 
            },
            [106] = {
                [48] = {1,1}, [46] = {3,0}, [47] = {1,1}, [50] = {3,3}, [49] = {1,1}, 
            },
            [103] = {
                [48] = {1,1}, [46] = {1,1}, [47] = {1,1}, [45] = {1,0}, [50] = {3,3}, [49] = {1,1}, 
            },
            [114] = {
                [44] = {3,0}, [48] = {1,1}, [46] = {1,1}, [47] = {1,1}, [45] = {1,1}, [50] = {3,2}, [49] = {8,0}, 
            },
            [111] = {
                [48] = {1,1}, [46] = {1,1}, [47] = {1,1}, [45] = {2,0}, [50] = {2,3}, [49] = {1,1}, 
            },
            [122] = {
                [44] = {2,0}, [48] = {1,3}, [46] = {1,1}, [47] = {1,1}, [45] = {1,1}, 
            },
            [119] = {
                [44] = {2,0}, [48] = {2,3}, [46] = {1,1}, [47] = {1,1}, [45] = {1,1}, 
            },
            [40] = {
                [48] = {1,1}, [52] = {2,3}, [51] = {1,1}, [47] = {3,0}, [50] = {1,1}, [49] = {1,1}, 
            },
            [44] = {
                [48] = {1,1}, [52] = {3,3}, [51] = {1,1}, [47] = {1,0}, [50] = {1,1}, [49] = {1,1}, 
            },
            [32] = {
                [52] = {1,1}, [51] = {1,1}, [50] = {1,1}, [53] = {1,3}, [49] = {1,0}, 
            },
            [36] = {
                [48] = {2,0}, [52] = {1,1}, [51] = {1,1}, [50] = {1,1}, [53] = {2,3}, [49] = {1,1}, 
            },
            [22] = {
                [48] = {2,0}, [52] = {1,1}, [51] = {1,1}, [50] = {1,1}, [53] = {2,3}, [49] = {1,1}, 
            },
            [25] = {
                [48] = {4,0}, [52] = {1,1}, [51] = {1,1}, [50] = {1,1}, [53] = {3,3}, [49] = {8,1}, 
            },
            [14] = {
                [44] = {1,1}, [42] = {8,1}, [48] = {1,1}, [46] = {1,1}, [40] = {3,1}, [51] = {2,2}, [43] = {1,1}, [41] = {4,1}, [47] = {1,1}, [45] = {1,1}, [50] = {9,0}, [49] = {1,1}, 
            },
            [17] = {
                [48] = {1,1}, [46] = {4,0}, [52] = {2,2}, [51] = {9,0}, [47] = {8,1}, [50] = {1,1}, [49] = {1,1}, 
            },
            [6] = {
                [42] = {1,3}, [38] = {1,0}, [40] = {1,1}, [39] = {1,1}, [41] = {1,1}, 
            },
            [9] = {
                [44] = {0,3}, [42] = {1,1}, [38] = {1,0}, [40] = {1,1}, [39] = {1,1}, [43] = {9,0}, [41] = {1,1}, 
            },
            [-2] = {
                [42] = {2,3}, [38] = {2,0}, [40] = {1,1}, [39] = {1,1}, [41] = {1,1}, 
            },
            [1] = {
                [42] = {1,3}, [38] = {1,0}, [40] = {1,1}, [39] = {1,1}, [41] = {1,1}, 
            },
            [80] = {
                [44] = {1,1}, [42] = {2,1}, [48] = {4,3}, [46] = {1,1}, [43] = {9,1}, [47] = {8,0}, [45] = {1,1}, 
            },
            [-6] = {
                [42] = {2,2}, [38] = {2,1}, [40] = {0,2}, [39] = {0,2}, [41] = {0,2}, 
            },
            [76] = {
                [44] = {2,0}, [48] = {1,1}, [46] = {1,1}, [47] = {1,1}, [45] = {1,1}, [49] = {3,3}, 
            },
            [88] = {
                [44] = {1,1}, [42] = {1,0}, [46] = {1,3}, [43] = {1,1}, [45] = {1,1}, 
            },
            [84] = {
                [44] = {1,1}, [42] = {2,0}, [46] = {3,3}, [43] = {1,1}, [45] = {1,1}, 
            },
        }
    },
}

local STAGE_COLLISION = {
    ["B"] = {
        {240,86}, {238,88}, {236,88}, {234,88}, {232,88}, {230,88}, {228,88}, {226,88}, {224,90}, {222,90}, {220,90}, {210,92}, {218,92}, {216,92}, {214,92}, {212,92}, {208,90}, {206,90}, {204,90}, {202,90}, 
        {200,88}, {198,88}, {196,86}, {194,86}, {192,84}, {190,84}, {188,84}, {186,84}, {184,84}, {182,84}, {180,84}, {178,84}, {176,84}, {174,84}, {172,84}, {170,84}, {168,84}, {166,84}, {164,84}, {162,84}, 
        {160,84}, {158,86}, {156,86}, {154,88}, {152,88}, {150,88}, {148,88}, {146,88}, {144,88}, {142,92}, {140,92}, {138,94}, {136,94}, {134,94}, {132,96}, {130,96}, {128,96}, {126,96}, {124,96}, {122,96}, 
        {120,96}, {118,96}, {116,96}, {114,96}, {112,96}, {110,96}, {108,96}, {106,96}, {104,96}, {102,96}, {100,96}, {98,96}, {96,94}, {94,94}, {92,94}, {90,94}, {88,94}, {86,94}, {84,94}, {82,94}, 
        {80,94}, {78,94}, {76,94}, {74,94}, {74,96}, {72,96}, {70,96}, {68,96}, {66,96}, {64,98}, {62,98}, {60,98}, {58,98}, {56,98}, {54,98}, {52,98}, {52,96}, {50,96}, {48,96}, {46,96}, 
        {44,96}, {42,94}, {40,94}, {38,94}, {36,94}, {34,92}, {32,88}, {30,84}, {28,80}, {26,78}, {24,76}, {22,76}, {20,76}, {18,76}, {16,76}, {14,76}, {12,76}, {10,76}, {8,76}, {6,76}, 
        {4,76}, {2,76}, {0,76}, 
    },
}

local STAGE_OBJECTS = {
}

local STAGE_BACKGROUNDS = {
}

local STAGE_INTERACTABLES = {
}

local STAGE_ENEMIES = {
}

-- LEVEL DATA END --
local function r(t,n,o)local q=_G[t].find(n,o)return q or error("Failed to resolve "..n..":"..o.. " ("..t.."), make sure all resources are loaded before loading the stage.") end

local function mkObjs()
    local bg = Object("PELDR_BG")
    local ts = Object("PELDR_TS")
	local c = camera
	local x,y,w,h=0,0,0,0
    callback("onCameraUpdate", function() if bg:find(1) or ts:find(1) then x,y,w,h=camera.x,camera.y,camera.width,camera.height end end, -100)
    local z = {}
    callback("globalRoomEnd", function(r)
        for k, _ in pairs(z) do
            if Surface.isValid(k) then
                k:free()
            end
        end
    end, -100)
    
    local di,st,rst = graphics.drawImage,graphics.setTarget,graphics.resetTarget
    local function chnk(s, ts, x, y, o)
        local r = {0, 0, 16, 16}
        local d = {image = s, x = 0, y = 0, region = r}
        local sf = Surface(512, 512)
        st(sf)
        local w
        for _x = x / 16, (x + 512) / 16 do
            local q = ts[_x]
            if q ~= nil then
                for _y = y / 16, (y + 512) / 16 do
                    local t = q[_y]
                    if t ~= nil then
                        r[1] = t[1] * 16 + (o or (t[1] + 1))
                        r[2] = t[2] * 16 + (o or (t[2] + 1))
                        d.x = _x * 16 - x
                        d.y = _y * 16 - y
                        w = 1
                        di(d)
                    end
                end
            end
        end
        rst()
        if not w then
            sf:free()
            return 0
        else
            z[sf] = 1
            return sf
        end
    end
    local mf,mc = math.floor, math.ceil
    local vld = Surface.isValid
	ts:addCallback("draw", function(i)
		local d=i:getModData("PELDR")
        local c = d.c
        for X = mf(x / 512), mc((x + w) / 512) do
            local q = c[X]
            if q == nil then
                q = {}
                c[X] = {}
            end
            for Y = mf(y / 512), mc((y + h) / 512) do
                local cc = q[Y]
                if cc ~= 0 and not vld(cc) then
                    if cc ~= nil then
                        z[cc] = nil
                    end
                    cc = chnk(d.s, d.t, X * 512, Y * 512,d.g or 0)
                    q[Y] = cc
                end
                if cc ~= 0 then
                    cc:draw(X * 512, Y * 512)
                end
            end
        end
	end)
    
	bg:addCallback("draw", function(i)
		local d=i:getModData("PELDR")
		local s=d.s
		
		local fx,fy=d.x+x*d.px+w*d.xo,d.y+y*d.py+h*d.yo

		local sw,x1,x2=1,fx,fx
		if d.hr then
			sw = s.width
			x1 = x1 % sw + x - x % sw - sw
			x2 = x + w
		end

		local sh,y1,y2=1,fy,fy
		if d.vr then
			sh=s.height
			y1 = y1 % sh + y - y % sh - sh
			y2=y + h
		end

		for X=x1,x2,sw do for Y=y1,y2,sh do s:draw(X,Y)end end
	end)
	return ts,bg
end
local ts,bg=Object.find("PELDR_TS"),Object.find("PELDR_BG")
if ts == nil then ts,bg=mkObjs()end

local function spawnBG(sprite, depth, x, y, hrepeat, vrepeat, xparallax, yparallax, xpercentoffs, ypercentoffs)
	local i=bg:create(0,0)
	d=i:getModData("PELDR")
	i.depth = depth
	d.s = sprite
	d.x = x
	d.y = y
	d.hr = hrepeat
	d.vr = vrepeat
	d.px = xparallax
	d.py = yparallax
	d.xo = xpercentoffs
	d.yo = ypercentoffs
end

local function spawnTS(sprite, depth, tiles, grid)
	local i=ts:create(0,0)
	d=i:getModData("PELDR")
    i.depth = depth
    d.c = {}
    d.s = sprite
    d.g = grid
    d.t = tiles
end

local room = Room.new(STAGE_INFO.name)
room:resize(STAGE_INFO.width, STAGE_INFO.height)
for col, coordlist in pairs(STAGE_COLLISION) do
	local obj = Object.find(col, "Vanilla")
	for _, coords in ipairs(coordlist) do
        room:createInstance(obj, coords[1]*8, coords[2]*8)
    end
end
for _, objectlist in ipairs(STAGE_OBJECTS) do
	local obj = r("Object", objectlist[1], objectlist[2])
	for _, coords in ipairs(objectlist[3]) do
		room:createInstance(obj, coords[1]*8, coords[2]*8)
	end
end

local stage = Stage.new(STAGE_INFO.name)
stage.subname = STAGE_INFO.subname
stage.rooms:add(room)
stage.music = Sound.find(STAGE_INFO.music) or Sound.find("MusicStage1")

for _, i in ipairs(STAGE_INTERACTABLES) do
    stage.interactables:add(r("Interactable", i[1], i[2]))
end
for _, e in ipairs(STAGE_ENEMIES) do
    stage.enemies:add(r("MonsterCard", e[1], e[2]))
end

local bgs = {}
for k, v in pairs(STAGE_BACKGROUNDS) do
    table.insert(bgs, {r("Sprite", v[1], v[2]), k, v[7], v[8], v[3]==1, v[4]==1, v[5], v[6], v[9], v[10]})
end
local lrs = {}
for _, v in ipairs(STAGE_LAYERS) do
    table.insert(lrs, {r("Sprite", v.sprite, v.origin), v.depth, v.tiles, v.grid})
end
local function mrgcol(o)
    for _, v in ipairs(o:findAll()) do
        v.xscale = 1 / 16
    end
    local c
    repeat
        c = 0
        for _, v in ipairs(o:findAll()) do
            if v:isValid() and v.xscale < 1 then
                local s = o:findPoint(v:get("bbox_right") + 16, v.y)
                if s and s.xscale < 1 then
                    c = 1
                    v.xscale = v.xscale + s.xscale
                    s:destroy()
                end
            end
        end
    until c == 0
end
local bs = Object.find("bossSpawn","vanilla")
local bs2 = Object.find("bossSpawn2","vanilla")
callback("globalRoomStart", function(r)
    if r == room then
        for _, v in ipairs(bgs) do
            spawnBG(table.unpack(v))
        end
        for _, v in ipairs(lrs) do
            spawnTS(table.unpack(v))
        end
        mrgcol(bs)
        mrgcol(bs2)
    end
end)


return stage